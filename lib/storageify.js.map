{"version":3,"sources":["../src/storageify.js"],"names":["storageify","_serialize","JSON","stringify","_deserialize","parse","_key","_storageify","key","serialize","deserialize","Error","onion","storage","local","getItem","take","map","startWith","flatten","state$","value","merge"],"mappings":"gQAgBwBA,U,CAhBxB,2E,wEAEA,QAASC,WAAT,GAA4B,CAC1B,MAAOC,MAAKC,SAAL,GACR,CAED,QAASC,aAAT,GAA8B,CAC5B,GAAI,CACF,MAAOF,MAAKG,KAAL,GACR,CAAC,QAAW,CAEZ,CACF,CAED,GAAMC,MAAO,UAAb,CAEe,QAASN,WAAT,GAA8C,iEAC3D,MAAOO,iBACR,CAED,QAASA,YAAT,KAGE,SADEC,GACF,cADQF,IACR,OADcG,SACd,cAD0BR,UAC1B,OADsCS,WACtC,cADoDN,YACpD,GACA,GAAyB,UAArB,UAAJ,CACE,KAAM,IAAIO,MAAJ,CAAU,4DAAV,CAAN,CAGF,GAAmB,QAAf,UAAJ,CACE,KAAM,IAAIA,MAAJ,CAAU,wCAAV,CAAN,CAGF,GAA2B,UAAvB,UAAJ,CACE,KAAM,IAAIA,MAAJ,CAAU,kDAAV,CAAN,CAGF,GAAyB,UAArB,UAAJ,CACE,KAAM,IAAIA,MAAJ,CAAU,gDAAV,CAAN,CAGF,MAAO,YAA+B,CACpC,GAAM,GAAiB,IAAvB,CACM,EAAoB,EAAeC,KADzC,CAGM,EAAW,EAAQC,OAAR,CAAgBC,KAAhB,CACdC,OADc,IAEdC,IAFc,CAET,CAFS,EAGdC,GAHc,IAIdA,GAJc,CAIV,kBACH,GAAkBC,SAAlB,CAA4B,WAAmC,CAC7D,MAAO,KACR,CAFD,CADG,CAJU,EASdC,OATc,EAHjB,CAcM,EAAgB,EAAQP,KAAR,CAAcQ,MAAd,CACnBH,GADmB,IAEnBA,GAFmB,CAEf,kBAAU,CAAET,KAAF,CAAYa,OAAZ,CAAV,CAFe,CAdtB,CAkBM,EAAW,EAAeR,OAAf,CACb,kBAAGS,KAAH,GAAwB,EAAeT,OAAvC,CADa,EAlBjB,CAsBM,iBAA6BD,OAA7B,CAA8CC,SAA9C,EAtBN,CAwBA,QACD,CACF","file":"storageify.js","sourcesContent":["import xs from 'xstream'\n\nfunction _serialize (state) {\n  return JSON.stringify(state)\n}\n\nfunction _deserialize (state) {\n  try {\n    return JSON.parse(state)\n  } catch (ex) {\n    return void 0\n  }\n}\n\nconst _key = 'appState'\n\nexport default function storageify (component, options = {}) {\n  return _storageify(component, options)\n}\n\nfunction _storageify (\n  component,\n  { key = _key, serialize = _serialize, deserialize = _deserialize }\n) {\n  if (typeof component !== 'function') {\n    throw new Error(\"storageify's first argument must be of type 'function'.\")\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error(\"key option must be of type 'string'.\")\n  }\n\n  if (typeof deserialize !== 'function') {\n    throw new Error(\"deserialize option must be of type 'function'.\")\n  }\n\n  if (typeof serialize !== 'function') {\n    throw new Error(\"serialize option must be of type 'function'.\")\n  }\n\n  return function _storageify (sources) {\n    const componentSinks = component(sources)\n    const componentReducer$ = componentSinks.onion\n\n    const reducer$ = sources.storage.local\n      .getItem(key)\n      .take(1)\n      .map(deserialize)\n      .map(storedState =>\n        componentReducer$.startWith(function storedReducer (prevState) {\n          return storedState || prevState\n        })\n      )\n      .flatten()\n\n    const stateStorage$ = sources.onion.state$\n      .map(serialize)\n      .map(state => ({ key: key, value: state }))\n\n    const storage$ = componentSinks.storage\n      ? xs.merge(stateStorage$, componentSinks.storage)\n      : stateStorage$\n\n    const sinks = { ...componentSinks, onion: reducer$, storage: storage$ }\n\n    return sinks\n  }\n}\n"]}
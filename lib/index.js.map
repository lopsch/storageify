{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import xs from 'xstream'\n\nfunction serialize_ (state) {\n  return JSON.stringify(state)\n}\n\nfunction deserialize_ (state) {\n  try {\n    return JSON.parse(state)\n  } catch (ex) {\n    return void 0\n  }\n}\n\nconst key_ = 'appState'\n\nexport default function storageify (component, options = {}) {\n  return storageify_(component, options)\n}\n\nfunction storageify_ (\n  component,\n  { key = key_, serialize = serialize_, deserialize = deserialize_ }\n) {\n  if (typeof component !== 'function') {\n    throw new Error(\"storageify's first argument must be of type 'function'.\")\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error(\"key option must be of type 'string'.\")\n  }\n\n  if (typeof deserialize !== 'function') {\n    throw new Error(\"deserialize option must be of type 'function'.\")\n  }\n\n  if (typeof serialize !== 'function') {\n    throw new Error(\"serialize option must be of type 'function'.\")\n  }\n\n  return function _storageify (sources) {\n    const componentSinks = component(sources)\n    const componentReducer$ = componentSinks.onion\n\n    const reducer$ = sources.storage.local\n      .getItem(key)\n      .take(1)\n      .map(deserialize)\n      .map(storedState =>\n        componentReducer$.startWith(function storedReducer (prevState) {\n          return storedState || prevState\n        })\n      )\n      .flatten()\n\n    const stateStorage$ = sources.onion.state$\n      .map(serialize)\n      .map(state => ({ key: key, value: state }))\n\n    const storage$ = componentSinks.storage\n      ? xs.merge(stateStorage$, componentSinks.storage)\n      : stateStorage$\n\n    const sinks = { ...componentSinks, onion: reducer$, storage: storage$ }\n\n    return sinks\n  }\n}\n"],"names":["serialize_","state","JSON","stringify","deserialize_","parse","ex","key_","storageify","component","options","storageify_","key","serialize","deserialize","Error","_storageify","sources","componentSinks","componentReducer$","onion","reducer$","storage","local","getItem","take","map","startWith","storedReducer","prevState","storedState","flatten","stateStorage$","state$","value","storage$","xs","merge","sinks"],"mappings":";;;;;;;;;;;;;;;;;;;;AAEA,SAASA,UAAT,CAAqBC,KAArB,EAA4B;SACnBC,KAAKC,SAAL,CAAeF,KAAf,CAAP;;;AAGF,SAASG,YAAT,CAAuBH,KAAvB,EAA8B;MACxB;WACKC,KAAKG,KAAL,CAAWJ,KAAX,CAAP;GADF,CAEE,OAAOK,EAAP,EAAW;WACJ,KAAK,CAAZ;;;;AAIJ,IAAMC,OAAO,UAAb;;AAEA,AAAe,SAASC,UAAT,CAAqBC,SAArB,EAA8C;MAAdC,OAAc,uEAAJ,EAAI;;SACpDC,YAAYF,SAAZ,EAAuBC,OAAvB,CAAP;;;AAGF,SAASC,WAAT,CACEF,SADF,QAGE;sBADEG,GACF;MADEA,GACF,4BADQL,IACR;4BADcM,SACd;MADcA,SACd,kCAD0Bb,UAC1B;8BADsCc,WACtC;MADsCA,WACtC,oCADoDV,YACpD;;MACI,OAAOK,SAAP,KAAqB,UAAzB,EAAqC;UAC7B,IAAIM,KAAJ,CAAU,yDAAV,CAAN;;;MAGE,OAAOH,GAAP,KAAe,QAAnB,EAA6B;UACrB,IAAIG,KAAJ,CAAU,sCAAV,CAAN;;;MAGE,OAAOD,WAAP,KAAuB,UAA3B,EAAuC;UAC/B,IAAIC,KAAJ,CAAU,gDAAV,CAAN;;;MAGE,OAAOF,SAAP,KAAqB,UAAzB,EAAqC;UAC7B,IAAIE,KAAJ,CAAU,8CAAV,CAAN;;;SAGK,SAASC,WAAT,CAAsBC,OAAtB,EAA+B;QAC9BC,iBAAiBT,UAAUQ,OAAV,CAAvB;QACME,oBAAoBD,eAAeE,KAAzC;;QAEMC,WAAWJ,QAAQK,OAAR,CAAgBC,KAAhB,CACdC,OADc,CACNZ,GADM,EAEda,IAFc,CAET,CAFS,EAGdC,GAHc,CAGVZ,WAHU,EAIdY,GAJc,CAIV;aACHP,kBAAkBQ,SAAlB,CAA4B,SAASC,aAAT,CAAwBC,SAAxB,EAAmC;eACtDC,eAAeD,SAAtB;OADF,CADG;KAJU,EASdE,OATc,EAAjB;;QAWMC,gBAAgBf,QAAQG,KAAR,CAAca,MAAd,CACnBP,GADmB,CACfb,SADe,EAEnBa,GAFmB,CAEf;aAAU,EAAEd,KAAKA,GAAP,EAAYsB,OAAOjC,KAAnB,EAAV;KAFe,CAAtB;;QAIMkC,WAAWjB,eAAeI,OAAf,GACbc,GAAGC,KAAH,CAASL,aAAT,EAAwBd,eAAeI,OAAvC,CADa,GAEbU,aAFJ;;QAIMM,qBAAapB,cAAb,IAA6BE,OAAOC,QAApC,EAA8CC,SAASa,QAAvD,GAAN;;WAEOG,KAAP;GAzBF;;;;;"}